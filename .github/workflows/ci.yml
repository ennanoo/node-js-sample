name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/my-node-app:latest .

      - name: Save Docker image as tarball
        run: docker save ${{ secrets.DOCKERHUB_USERNAME }}/my-node-app:latest | gzip > my-node-app.tar.gz

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: my-node-app
          path: my-node-app.tar.gz

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: my-node-app

      - name: Load Docker image
        run: gunzip -c my-node-app.tar.gz | docker load

      - name: Run Docker container
        run: docker run -d -p 8080:8080 --name my-node-app ${{ secrets.DOCKERHUB_USERNAME }}/my-node-app

      - name: Test Docker container
        run: curl --fail http://localhost:8080 || (docker logs my-node-app && exit 1)

  push:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: my-node-app

      - name: Load Docker image
        run: gunzip -c my-node-app.tar.gz | docker load

      - name: Push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/my-node-app:latest